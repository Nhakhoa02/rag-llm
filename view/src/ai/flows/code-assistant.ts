// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI code assistant for codebase interpretation.
 *
 * - codeAssistant - A function that uses AI to answer questions about code.
 * - CodeAssistantInput - The input type for the codeAssistant function.
 * - CodeAssistantOutput - The return type for the codeAssistant function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CodeAssistantInputSchema = z.object({
  code: z.string().describe('The code currently in the editor.'),
  question: z.string().describe('The question about the code.'),
});
export type CodeAssistantInput = z.infer<typeof CodeAssistantInputSchema>;

const CodeAssistantOutputSchema = z.object({
  answer: z.string().describe('The answer to the question about the code.'),
});
export type CodeAssistantOutput = z.infer<typeof CodeAssistantOutputSchema>;

export async function codeAssistant(input: CodeAssistantInput): Promise<CodeAssistantOutput> {
  return codeAssistantFlow(input);
}

const prompt = ai.definePrompt({
  name: 'codeAssistantPrompt',
  input: {schema: CodeAssistantInputSchema},
  output: {schema: CodeAssistantOutputSchema},
  prompt: `You are an AI code assistant. Use the following code and question to formulate an answer.\n\nCode:\n\n{{code}}\n\nQuestion:\n\n{{question}}`,
});

const codeAssistantFlow = ai.defineFlow(
  {
    name: 'codeAssistantFlow',
    inputSchema: CodeAssistantInputSchema,
    outputSchema: CodeAssistantOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
